# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    machine:
      image: ubuntu-1604:202004-01
    steps:
      - checkout
      - run: docker image build --tag custom-composer --file ./custom-composer-image/Dockerfile .
      - run: docker run --rm --volume $PWD:/app custom-composer install
      - run: ./docker/run compose up -d
      - run: ./docker/run shell wp-install:circleci
      - run: ./docker/run shell codecept run
#      - run: docker run --rm --volume $PWD:/app custom-composer wp-install:circleci

#      - run: sudo apt update && sudo apt install zlib1g-dev libsqlite3-dev
#      - run: sudo docker-php-ext-install zip
#
#      # Download and cache dependencies
#      - restore_cache:
#          keys:
#            # "composer.lock" can be used if it is committed to the repo
#            - v1-dependencies-{{ checksum "composer.json" }}
#            # fallback to using the latest cache if no exact match is found
#            - v1-dependencies-
#
#      - run: composer install -n --prefer-dist
#
#      - save_cache:
#          key: v1-dependencies-{{ checksum "composer.json" }}
#          paths:
#            - ./vendor
##      - restore_cache:
##          keys:
##            - node-v1-{{ checksum "package.json" }}
##            - node-v1-
##      - run: yarn install
##      - save_cache:
##          key: node-v1-{{ checksum "package.json" }}
##          paths:
##            - node_modules
#
#      # prepare the database
##      - run: touch storage/testing.sqlite
##      - run: php artisan migrate --env=testing --database=sqlite_testing --force
#
#      # run tests with phpunit or codecept
#      #- run: ./vendor/bin/phpunit
#      - run: ./vendor/bin/codecept build
#      - run: ./vendor/bin/codecept run